{"version":3,"file":"progress-tabs.js","sourceRoot":"","sources":["../../../../src/components/progress-tabs/progress-tabs.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,2CAIwB;AACxB,qFAA8D;AAC9D,qDAA8B;AAG9B,qCAA+B;AAE/B,MAAM,gBAAgB,GAAG,CAAC,KAAuC,EAAE,EAAE;IACjE,OAAO,oBAAC,sBAAsB,CAAC,IAAI,OAAK,KAAK,GAAI,CAAA;AACrD,CAAC,CAAA;AACD,gBAAgB,CAAC,WAAW,GAAG,cAAc,CAAA;AAO7C,MAAM,iBAAiB,GAAG,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,EAAiB,EAAE,EAAE;IACxE,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QAC5B,QAAQ,MAAM,EAAE,CAAC;YACb,KAAK,aAAa;gBACd,OAAO,wBAAgB,CAAA;YAC3B,KAAK,aAAa;gBACd,OAAO,uBAAe,CAAA;YAC1B,KAAK,WAAW;gBACZ,OAAO,wBAAgB,CAAA;YAC3B;gBACI,OAAO,wBAAgB,CAAA;QAC/B,CAAC;IACL,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,CACH,iCAAU,KAAK,EACT,SAAS,EAAE,IAAA,SAAG,EACV,2EAA2E,EAC3E,SAAS,CACZ;QACT,oBAAC,IAAI,OAAE,CACF,CACN,CAAA;AACL,CAAC,CAAA;AAUD,MAAM,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAG1C,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,GAAG,aAAa,EAAE,GAAG,KAAK,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAChE,oBAAC,sBAAsB,CAAC,OAAO,IAC3B,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACV,gIAAgI,EAChI,0FAA0F,EAE1F,+DAA+D,EAC/D,sDAAsD,EACtD,6BAA6B,EAC7B,iCAAiC,EACjC,uEAAuE,EACvE,SAAS,CACZ,KACG,KAAK;IAET,oBAAC,iBAAiB,IAAC,MAAM,EAAE,MAAM,GAAG;IACnC,QAAQ,CACoB,CACpC,CAAC,CAAA;AACF,mBAAmB,CAAC,WAAW,GAAG,sBAAsB,CAAA;AAExD,MAAM,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAGvC,CAAC,EAAC,SAAS,EAAE,GAAG,KAAK,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAC9B,oBAAC,sBAAsB,CAAC,IAAI,IACxB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EAAC,mCAAmC,EAAE,SAAS,CAAC,KAC1D,KAAK,GACX,CACL,CAAC,CAAA;AACF,gBAAgB,CAAC,WAAW,GAAG,mBAAmB,CAAA;AAElD,MAAM,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAG1C,CAAC,EAAC,SAAS,EAAE,GAAG,KAAK,EAAC,EAAE,GAAG,EAAE,EAAE;IAC7B,OAAO,CACH,oBAAC,sBAAsB,CAAC,OAAO,IAC3B,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EAAC,cAAc,EAAE,SAAS,CAAC,KACrC,KAAK,GACX,CACL,CAAA;AACL,CAAC,CAAC,CAAA;AACF,mBAAmB,CAAC,WAAW,GAAG,sBAAsB,CAAA;AAExD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE;IACjD,OAAO,EAAE,mBAAmB;IAC5B,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,mBAAmB;CAC/B,CAAC,CAAA;AAEM,oCAAY","sourcesContent":["\"use client\"\n\nimport {\n    CheckCircleSolid,\n    CircleDottedLine,\n    CircleHalfSolid,\n} from \"@medusajs/icons\"\nimport * as ProgressTabsPrimitives from \"@radix-ui/react-tabs\"\nimport * as React from \"react\"\n\nimport {ProgressStatus} from \"@/types\"\nimport {clx} from \"@/utils/clx\"\n\nconst ProgressTabsRoot = (props: ProgressTabsPrimitives.TabsProps) => {\n    return <ProgressTabsPrimitives.Root {...props} />\n}\nProgressTabsRoot.displayName = \"ProgressTabs\"\n\ninterface IndicatorProps\n    extends Omit<React.ComponentPropsWithoutRef<\"span\">, \"children\"> {\n    status?: ProgressStatus\n}\n\nconst ProgressIndicator = ({status, className, ...props}: IndicatorProps) => {\n    const Icon = React.useMemo(() => {\n        switch (status) {\n            case \"not-started\":\n                return CircleDottedLine\n            case \"in-progress\":\n                return CircleHalfSolid\n            case \"completed\":\n                return CheckCircleSolid\n            default:\n                return CircleDottedLine\n        }\n    }, [status])\n\n    return (\n        <span {...props}\n              className={clx(\n                  \"text-ui-fg-muted group-data-[state=active]/trigger:text-ui-fg-interactive\",\n                  className\n              )}>\n      <Icon/>\n    </span>\n    )\n}\n\ninterface ProgressTabsTriggerProps\n    extends Omit<\n        React.ComponentPropsWithoutRef<typeof ProgressTabsPrimitives.Trigger>,\n        \"asChild\"\n    > {\n    status?: ProgressStatus\n}\n\nconst ProgressTabsTrigger = React.forwardRef<\n    React.ElementRef<typeof ProgressTabsPrimitives.Trigger>,\n    ProgressTabsTriggerProps\n>(({className, children, status = \"not-started\", ...props}, ref) => (\n    <ProgressTabsPrimitives.Trigger\n        ref={ref}\n        className={clx(\n            \"txt-compact-small-plus transition-fg text-ui-fg-muted bg-ui-bg-subtle border-r-ui-border-base flex-1 last:border-r-transparent\",\n            \"inline-flex h-14 w-full flex-1 items-center gap-x-2 border-r px-4 text-left outline-none\",\n\n            \"group/trigger overflow-hidden text-ellipsis whitespace-nowrap\",\n            \"disabled:bg-ui-bg-disabled disabled:text-ui-fg-muted\",\n            \"hover:bg-ui-bg-subtle-hover\",\n            \"focus:bg-ui-bg-base focus:z-[1]\",\n            \"data-[state=active]:text-ui-fg-base data-[state=active]:bg-ui-bg-base\",\n            className\n        )}\n        {...props}\n    >\n        <ProgressIndicator status={status}/>\n        {children}\n    </ProgressTabsPrimitives.Trigger>\n))\nProgressTabsTrigger.displayName = \"ProgressTabs.Trigger\"\n\nconst ProgressTabsList = React.forwardRef<\n    React.ElementRef<typeof ProgressTabsPrimitives.List>,\n    React.ComponentPropsWithoutRef<typeof ProgressTabsPrimitives.List>\n>(({className, ...props}, ref) => (\n    <ProgressTabsPrimitives.List\n        ref={ref}\n        className={clx(\"flex items-center justify-between\", className)}\n        {...props}\n    />\n))\nProgressTabsList.displayName = \"ProgressTabs.List\"\n\nconst ProgressTabsContent = React.forwardRef<\n    React.ElementRef<typeof ProgressTabsPrimitives.Content>,\n    React.ComponentPropsWithoutRef<typeof ProgressTabsPrimitives.Content>\n>(({className, ...props}, ref) => {\n    return (\n        <ProgressTabsPrimitives.Content\n            ref={ref}\n            className={clx(\"outline-none\", className)}\n            {...props}\n        />\n    )\n})\nProgressTabsContent.displayName = \"ProgressTabs.Content\"\n\nconst ProgressTabs = Object.assign(ProgressTabsRoot, {\n    Trigger: ProgressTabsTrigger,\n    List: ProgressTabsList,\n    Content: ProgressTabsContent,\n})\n\nexport {ProgressTabs}\n"]}