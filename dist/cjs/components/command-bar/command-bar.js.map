{"version":3,"file":"command-bar.js","sourceRoot":"","sources":["../../../../src/components/command-bar/command-bar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as Popover from \"@radix-ui/react-popover\"\nimport * as Portal from \"@radix-ui/react-portal\"\nimport * as React from \"react\"\n\nimport {Kbd} from \"@/components/kbd\"\nimport {clx} from \"@/utils/clx\"\n\ntype CommandBarProps = React.PropsWithChildren<{\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n    defaultOpen?: boolean\n    disableAutoFocus?: boolean\n}>\n\nconst Root = ({open = false, onOpenChange, defaultOpen = false, disableAutoFocus = true, children}: CommandBarProps) => {\n    return (\n        <Popover.Root\n            open={open}\n            onOpenChange={onOpenChange}\n            defaultOpen={defaultOpen}\n        >\n            <Portal.Root>\n                <Popover.Anchor\n                    className={clx(\"fixed bottom-8 left-1/2 h-px w-px -translate-x-1/2\")}\n                />\n            </Portal.Root>\n            <Popover.Portal>\n                <Popover.Content\n                    side=\"top\"\n                    sideOffset={0}\n                    onOpenAutoFocus={(e) => {\n                        if (disableAutoFocus) {\n                            e.preventDefault()\n                        }\n                    }}\n                    className={clx(\n                        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\"\n                    )}\n                >\n                    {children}\n                </Popover.Content>\n            </Popover.Portal>\n        </Popover.Root>\n    )\n}\nRoot.displayName = \"CommandBar\"\n\nconst Value = React.forwardRef<\n    HTMLDivElement,\n    React.ComponentPropsWithoutRef<\"div\">\n>(({className, ...props}, ref) => {\n    return (\n        <div\n            ref={ref}\n            className={clx(\n                \"txt-compact-small-plus text-ui-contrast-fg-secondary px-3 py-2.5\",\n                className\n            )}\n            {...props}\n        />\n    )\n})\nValue.displayName = \"CommandBar.Value\"\n\nconst Bar = React.forwardRef<\n    HTMLDivElement,\n    React.ComponentPropsWithoutRef<\"div\">\n>(({className, ...props}, ref) => {\n    return (\n        <div\n            ref={ref}\n            className={clx(\n                \"bg-ui-contrast-bg-base relative flex items-center overflow-hidden rounded-xl px-1\",\n                \"after:shadow-elevation-flyout after:pointer-events-none after:absolute after:inset-0 after:rounded-full after:content-['']\",\n                className\n            )}\n            {...props}\n        />\n    )\n})\nBar.displayName = \"CommandBar.Bar\"\n\nconst Seperator = React.forwardRef<\n    HTMLDivElement,\n    Omit<React.ComponentPropsWithoutRef<\"div\">, \"children\">\n>(({className, ...props}, ref) => {\n    return (\n        <div\n            ref={ref}\n            className={clx(\"bg-ui-contrast-border-base h-10 w-px\", className)}\n            {...props}\n        />\n    )\n})\nSeperator.displayName = \"CommandBar.Seperator\"\n\ninterface CommandProps\n    extends Omit<\n        React.ComponentPropsWithoutRef<\"button\">,\n        \"children\" | \"onClick\"\n    > {\n    action: () => void | Promise<void>\n    label: string\n    shortcut: string\n}\n\nconst Command = React.forwardRef<HTMLButtonElement, CommandProps>(\n    (\n        {className, type = \"button\", label, action, shortcut, disabled, ...props},\n        ref\n    ) => {\n        React.useEffect(() => {\n            const handleKeyDown = (event: KeyboardEvent) => {\n                if (event.key === shortcut) {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    action()\n                }\n            }\n\n            if (!disabled) {\n                document.addEventListener(\"keydown\", handleKeyDown)\n            }\n\n            return () => {\n                document.removeEventListener(\"keydown\", handleKeyDown)\n            }\n        }, [action, shortcut, disabled])\n\n        return (\n            <button\n                ref={ref}\n                className={clx(\n                    \"bg-ui-contrast-bg-base txt-compact-small-plus transition-fg text-ui-contrast-fg-primary flex items-center gap-x-2 px-3 py-2.5 outline-none\",\n                    \"focus:bg-ui-contrast-bg-highlight focus:hover:bg-ui-contrast-bg-base-hover hover:bg-ui-contrast-bg-base-hover active:bg-ui-contrast-bg-base-pressed focus:active:bg-ui-contrast-bg-base-pressed disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled\",\n                    \"last-of-type:-mr-1 last-of-type:pr-4\",\n                    className\n                )}\n                type={type}\n                onClick={action}\n                {...props}\n            >\n                <span>{label}</span>\n                <Kbd className=\"bg-ui-contrast-bg-subtle border-ui-contrast-border-base text-ui-contrast-fg-secondary\">\n                    {shortcut.toUpperCase()}\n                </Kbd>\n            </button>\n        )\n    }\n)\nCommand.displayName = \"CommandBar.Command\"\n\nconst CommandBar = Object.assign(Root, {\n    Command,\n    Value,\n    Bar,\n    Seperator,\n})\n\nexport {CommandBar}\n"]}